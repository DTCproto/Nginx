name: BUILD_NGINX_WITH_BORINGSSL(V3)

on:
  # you may only define up to 10 `inputs` for a `workflow_dispatch` event
  workflow_dispatch:
    inputs:
      nginx_commit_id:
        description: "指定nginx使用commit id版本"
        required: true
        default: "release-1.29.2"
        type: string
      ssl_commit_id:
        description: "指定BoringSSL使用commit id版本"
        required: true
        default: "0.20251002.0"
        type: string
      ngx_brotli_commit_id:
        description: "指定ngx_brotli使用commit id版本"
        required: true
        default: "a71f9312c2deb28875acc7bacfdd5695a111aa53"
        type: string
      ngx_headers_more_commit_id:
        description: "指定ngx_headers_more使用commit id版本"
        required: true
        default: "v0.39"
        type: string
      njs_commit_id:
        description: "指定njs使用commit id版本"
        required: true
        default: "0.9.3"
        type: string
      quickjs_commit_id:
        description: "指定quickjs使用commit id版本"
        required: true
        default: "v0.10.1"
        type: string
      build_ssl:
        description: "enable ssl build"
        default: true
        type: boolean
      build_base:
        description: "enable base build"
        default: true
        type: boolean
      build_core:
        description: "enable core build"
        default: true
        type: boolean
      release_archives:
        description: "enable release archives"
        default: true
        type: boolean

jobs:
  build-base:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    # 同一个标签，不能多次push，会强制清空覆盖所有数据
    # strategy:
    #   matrix:
    #     os: [linux/amd64, linux/arm64]
    steps:
      - name: Free Disk-Space
        run: df -h && sudo apt-get clean && docker system prune -a -f && sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc && df -h

      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v10.0.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install APT dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: git curl wget

      - name: init
        run: |
          cp -rf ${{ github.workspace }}/conf/* ${{ github.workspace }}/mainline/
          ls ${{ github.workspace }}/mainline/

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set lower case name
        run: |
          echo "ACTOR_LC=${ACTOR,,}" >>${GITHUB_ENV}
          echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_ENV}
        env:
          ACTOR: '${{ github.actor }}'
          REPOSITORY: '${{ github.repository }}'

      # 自动标签
      #- name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@v5
      #  with:
      #    images: |
      #      ${{ secrets.DOCKERHUB_USERNAME }}/nginx
      #      ghcr.io/${{ github.repository }}

      - name: Build And Push (ssl)
        if: ${{ inputs.build_ssl }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/mainline/
          file: ${{ github.workspace }}/mainline/Base-BoringSSL.Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            BUILD_SHARED_LIBS=1
            BORINGSSL_COMMIT_ID=${{ inputs.ssl_commit_id }}
          push: ${{ inputs.release_archives }}
          provenance: false
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/base-ssl:${{ inputs.ssl_commit_id }}-boringssl
            ${{ secrets.DOCKERHUB_USERNAME }}/base-ssl:boringssl-latest
            ghcr.io/${{ env.ACTOR_LC }}/base-ssl:${{ inputs.ssl_commit_id }}-boringssl
            ghcr.io/${{ env.ACTOR_LC }}/base-ssl:boringssl-latest
          cache-from: type=registry,ref=ghcr.io/${{ env.ACTOR_LC }}/base-ssl:boringssl-latest
          cache-to: type=inline

      - name: Build And Push (base)
        if: ${{ inputs.build_base }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/mainline/
          file: ${{ github.workspace }}/mainline/Base-Nginx.Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            NGINX_COMMIT_ID=${{ inputs.nginx_commit_id }}
            BORINGSSL_COMMIT_ID=${{ inputs.ssl_commit_id }}
            NGX_BROTLI_COMMIT_ID=${{ inputs.ngx_brotli_commit_id }}
            NGX_HEADERS_MORE_COMMIT_ID=${{ inputs.ngx_headers_more_commit_id }}
            NJS_COMMIT_ID=${{ inputs.njs_commit_id }}
            QUICKJS_COMMIT_ID=${{ inputs.quickjs_commit_id }}
            BASE_IMAGE=ghcr.io/${{ env.ACTOR_LC }}/base-ssl:${{ inputs.ssl_commit_id }}-boringssl
          push: ${{ inputs.release_archives }}
          provenance: false
          #tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}
          #annotations: ${{ steps.meta.outputs.annotations }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ inputs.nginx_commit_id }}-${{ inputs.ssl_commit_id }}-base-boringssl
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ inputs.nginx_commit_id }}-base-boringssl
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:base-boringssl-latest
            ghcr.io/${{ env.ACTOR_LC }}/nginx:${{ inputs.nginx_commit_id }}-${{ inputs.ssl_commit_id }}-base-boringssl
            ghcr.io/${{ env.ACTOR_LC }}/nginx:${{ inputs.nginx_commit_id }}-base-boringssl
            ghcr.io/${{ env.ACTOR_LC }}/nginx:base-boringssl-latest
          cache-from: type=registry,ref=ghcr.io/${{ env.ACTOR_LC }}/nginx:base-boringssl-latest
          cache-to: type=inline

      - name: Build And Push (core)
        if: ${{ inputs.build_core }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/mainline/
          file: ${{ github.workspace }}/mainline/Core.Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            NGINX_COMMIT_ID=${{ inputs.nginx_commit_id }}
            BORINGSSL_COMMIT_ID=${{ inputs.ssl_commit_id }}
            BASE_IMAGE=ghcr.io/${{ env.ACTOR_LC }}/nginx:${{ inputs.nginx_commit_id }}-${{ inputs.ssl_commit_id }}-base-boringssl
          push: ${{ inputs.release_archives }}
          provenance: false
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ inputs.nginx_commit_id }}-${{ inputs.ssl_commit_id }}-boringssl
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:boringssl-latest
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest
            ghcr.io/${{ env.ACTOR_LC }}/nginx:${{ inputs.nginx_commit_id }}-${{ inputs.ssl_commit_id }}-boringssl
            ghcr.io/${{ env.ACTOR_LC }}/nginx:boringssl-latest
            ghcr.io/${{ env.ACTOR_LC }}/nginx:latest
          cache-from: type=registry,ref=ghcr.io/${{ env.ACTOR_LC }}/nginx:boringssl-latest
          cache-to: type=inline
