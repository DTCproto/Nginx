name: BUILD_NGINX_WITH_BORINGSSL

on:
  workflow_dispatch:
    inputs:
      nginx_version:
        description: "指定nginx版本"
        required: true
        default: "1.27.2"
        type: string
      ssl_commit_id:
        description: "指定BoringSSL使用commit id版本"
        required: true
        default: "HEAD~0"
        type: string
      dyn_tls_version:
        description: "指定dyn_tls补丁版本"
        required: true
        default: "1.27.2"
        type: choice
        options:
          - "1.27.2"
          - "1.25.1"
      build_base:
        description: "enable base build"
        default: true
        type: boolean
      build_core:
        description: "enable core build"
        default: true
        type: boolean
      release_archives:
        description: "enable release archives"
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    # 同一个标签，不能多次push，会强制清空覆盖所有数据
    # strategy:
    #   matrix:
    #     os: [linux/amd64, linux/arm64]
    steps:
      - name: Free Disk-Space
        run: df -h && sudo apt-get clean && docker system prune -a -f && sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc && df -h

      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install APT dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: git curl wget

      - name: init
        run: |
          cp -f ${{ github.workspace }}/conf/nginx.conf ${{ github.workspace }}/mainline/nginx.conf
          ls ${{ github.workspace }}/mainline/

      - name: get boringssl version
        run: |
          mkdir -p ${{ github.workspace }}/build/
          cd ${{ github.workspace }}/build
          git clone https://boringssl.googlesource.com/boringssl
          cd ${{ github.workspace }}/build/boringssl
          git reset --hard ${{ inputs.ssl_commit_id }}
          echo "ssl_short_commit_id=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build And Push (base)
        if: ${{ inputs.build_base }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/mainline/
          file: ${{ github.workspace }}/mainline/Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            NGINX_VERSION=${{ inputs.nginx_version }}
            BORINGSSL_COMMIT_ID=${{ env.ssl_short_commit_id }}
            DYN_TLS_VERSION=${{ inputs.dyn_tls_version }}
          push: ${{ inputs.release_archives }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ inputs.nginx_version }}-${{ env.ssl_short_commit_id }}-base-boringssl
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:base-boringssl
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:base-boringssl-latest
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nginx:base-boringssl-latest
          cache-to: type=inline

      - name: Build And Push (core)
        if: ${{ inputs.build_core }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/mainline/
          file: ${{ github.workspace }}/mainline/Core.Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            NGINX_VERSION=${{ inputs.nginx_version }}-
            BORINGSSL_COMMIT_ID=${{ env.ssl_short_commit_id }}-
          push: ${{ inputs.release_archives }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ inputs.nginx_version }}-${{ env.ssl_short_commit_id }}-boringssl
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:boringssl
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:boringssl-latest
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nginx:base-boringssl-latest
          cache-to: type=inline
